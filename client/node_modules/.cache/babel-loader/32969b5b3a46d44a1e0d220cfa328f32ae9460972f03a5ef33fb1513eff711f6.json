{"ast":null,"code":"var _jsxFileName = \"/Users/kangjunseok/Documents/GitHub/chat_Bot_Client/client/src/pages/ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ChatBubble from \"../components/ChatBubble\";\nimport { sendMessageToChatbot } from \"../api/chatApi\";\nimport \"./ChatPage.css\"; // 👈 스타일 import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [chatLog, setChatLog] = useState([]);\n  const chatContainerRef = useRef(null);\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [chatLog]);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const currentMessage = input;\n    setChatLog(prev => [...prev, {\n      sender: \"user\",\n      text: currentMessage\n    }]);\n    setInput(\"\");\n    try {\n      const reply = await sendMessageToChatbot(currentMessage);\n      setChatLog(prev => [...prev, {\n        sender: \"bot\",\n        text: reply\n      }]);\n    } catch (error) {\n      setChatLog(prev => [...prev, {\n        sender: \"bot\",\n        text: \"서버 오류가 발생했습니다.\"\n      }]);\n      console.error(error);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    sendMessage();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"chat-title\",\n      children: \"OpenAI \\uCC57\\uBD07\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chatContainerRef,\n      className: \"chat-container\",\n      children: chatLog.map((chat, idx) => /*#__PURE__*/_jsxDEV(ChatBubble, {\n        sender: chat.sender,\n        text: chat.text\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        placeholder: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n        onChange: e => setInput(e.target.value),\n        className: \"chat-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"chat-send-button\",\n        children: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"7nfrFoXawEUHELVfG/Ws1pSzwEE=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ChatBubble","sendMessageToChatbot","jsxDEV","_jsxDEV","ChatPage","_s","input","setInput","chatLog","setChatLog","chatContainerRef","current","scrollTop","scrollHeight","sendMessage","trim","currentMessage","prev","sender","text","reply","error","console","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","chat","idx","onSubmit","type","value","placeholder","onChange","target","_c","$RefreshReg$"],"sources":["/Users/kangjunseok/Documents/GitHub/chat_Bot_Client/client/src/pages/ChatPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport ChatBubble from \"../components/ChatBubble\";\nimport { sendMessageToChatbot } from \"../api/chatApi\";\nimport \"./ChatPage.css\"; // 👈 스타일 import\n\nconst ChatPage = () => {\n  const [input, setInput] = useState(\"\");\n  const [chatLog, setChatLog] = useState([]);\n  const chatContainerRef = useRef(null);\n\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [chatLog]);\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n\n    const currentMessage = input;\n    setChatLog((prev) => [...prev, { sender: \"user\", text: currentMessage }]);\n    setInput(\"\");\n\n    try {\n      const reply = await sendMessageToChatbot(currentMessage);\n      setChatLog((prev) => [...prev, { sender: \"bot\", text: reply }]);\n    } catch (error) {\n      setChatLog((prev) => [...prev, { sender: \"bot\", text: \"서버 오류가 발생했습니다.\" }]);\n      console.error(error);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    sendMessage();\n  };\n\n  return (\n    <div className=\"chat-page-container\">\n      <h1 className=\"chat-title\">OpenAI 챗봇</h1>\n      <div ref={chatContainerRef} className=\"chat-container\">\n        {chatLog.map((chat, idx) => (\n          <ChatBubble key={idx} sender={chat.sender} text={chat.text} />\n        ))}\n      </div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={input} placeholder=\"메시지를 입력하세요...\" onChange={(e) => setInput(e.target.value)} className=\"chat-input\" />\n        <button type=\"submit\" className=\"chat-send-button\">\n          send\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}